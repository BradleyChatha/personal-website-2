---
kind: pipeline
type: docker
name: default

steps:
  - name: Build
    image: node:14-alpine
    commands:
      - cd website
      - apk add python3 make g++
      - npm install
      - npm run build
---
kind: pipeline
type: docker
name: promote

trigger:
  event:
    - promote
  target:
    - production

steps:
  - name: Generate
    image: node:14-alpine
    commands:
      - cd website
      - apk add python3 make g++
      - npm install
      - npm run generate
  - name: Zip
    image: alpine:latest
    commands:
      - cd website
      - apk add zip
      - mkdir website
      - cd dist
      - zip -r ../website/dist.zip *
  - name: Upload to S3
    image: amazon/aws-cli
    environment:
      AWS_ACCESS_KEY_ID: 
        from_secret: s3Access
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3Secret
      AWS_DEFAULT_REGION: eu-west-2
      AMP_WEBSITE_APP_ID:
        from_secret: ampId
    commands:
      - cd website
      - aws s3api put-object --bucket bradley-chatha --key website/dist.zip --body website/dist.zip
  - name: Create hosts file
    image: alpine:latest
    environment:
      INSTANCE_ID:
        from_secret: instanceId
    commands:
      - cd website
      - echo server ansible_connection=aws_ssm ansible_aws_ssm_instance_id=$INSTANCE_ID ansible_aws_ssm_bucket_name=bradley-chatha ansible_aws_ssm_region=eu-west-2 > hosts
  - name: Trigger deployment
    image: ubuntu:bionic
    environment:
      AWS_ACCESS_KEY:
        from_secret: s3Access
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3Secret
      AWS_DEFAULT_REGION: eu-west-2
    commands:
      - cd website
      - curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
      - dpkg -i session-manager-plugin.deb
      - apt-get update
      - apt-get install -y ansible aws-cli python3 python3-pip
      - pip3 install boto3
      - ansible-galaxy collection install community.aws
      - ansible-playbook playbook.yaml -i ./hosts -t deploy