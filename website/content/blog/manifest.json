{"posts":[{"uid":"dlang-json-serialiser-1","title":"Serialising basic D types","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-json-serialiser-1-1","title":"Serialising basic D types - Alternative function layout","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-json-serialiser-2","title":"Serialising structs","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-json-serialiser-3","title":"Serialising enums and classes","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-json-serialiser-4","title":"Serialising arrays","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-json-serialiser-5","title":"Using UDAs for customisation","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-json-serialiser-6","title":"Mixin template to automate static deserialise","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""},{"uid":"dlang-compile-time-text-templates","title":"Text templates that can execute code at compile-time","created":"0001-01-01T00:00:00Z","updated":"0001-01-01T00:00:00Z","seoUrl":"","seoTitle":"","seoDescription":""}],"series":[{"description":"A series which covers the creation of a basic JSON serialiser in D\nwhile teaching several different aspects of D's metaprogramming: templates;\ntemplate arguments; function contracts; static if; static foreach; mixins, and more.\n","tags":["dlang","tutorial","metaprogramming"],"postUids":["dlang-json-serialiser-1","dlang-json-serialiser-1-1","dlang-json-serialiser-2","dlang-json-serialiser-3","dlang-json-serialiser-4","dlang-json-serialiser-5","dlang-json-serialiser-6"],"title":"Intro to D metaprogramming - Creating a JSON serialiser","status":"finished"},{"description":"D boasts one of the strongest, most flexible array of metaprogramming features amongst most existing languages,\nwhich allows it the ability to perform use-cases such as automating boilerplate without the need\nof external tooling; generating compiler optimised D code from a regex at compile-time; and running functions at compile-time\nto generate values/more code. All done using the language's built-in features with little compromise.\n","tags":["dlang","metaprogramming"],"postUids":["dlang-compile-time-text-templates"],"title":"Metaprogramming In D","status":"WIP"}]}